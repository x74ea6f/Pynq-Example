<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <simLog/>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <simLog>
        <logs message="WARNING: [Simtcl 6-197] One or more HDL objects could not be logged because of object type or size limitations.  To see details please rerun the command with -verbose (-v).&#xD;&#xA;## set designtopgroup [add_wave_group &quot;Design Top Signals&quot;]&#xD;&#xA;## set coutputgroup [add_wave_group &quot;C Outputs&quot; -into $designtopgroup]&#xD;&#xA;## set z_group [add_wave_group z(axis) -into $coutputgroup]&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/z_V_TREADY -into $z_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/z_V_TVALID -into $z_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/z_V_TDATA -into $z_group -radix hex&#xD;&#xA;## set return_group [add_wave_group return(axi_slave) -into $coutputgroup]&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/interrupt -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_BRESP -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_BREADY -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_BVALID -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_RRESP -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_RDATA -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_RREADY -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_RVALID -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_ARREADY -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_ARVALID -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_ARADDR -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_WSTRB -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_WDATA -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_WREADY -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_WVALID -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_AWREADY -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_AWVALID -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/s_axi_AXILiteS_AWADDR -into $return_group -radix hex&#xD;&#xA;## set cinputgroup [add_wave_group &quot;C Inputs&quot; -into $designtopgroup]&#xD;&#xA;## set a_group [add_wave_group a(axis) -into $cinputgroup]&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/a_V_TREADY -into $a_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/a_V_TVALID -into $a_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/a_V_TDATA -into $a_group -radix hex&#xD;&#xA;## set blocksiggroup [add_wave_group &quot;Block-level IO Handshake(internal)&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/ap_done -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/ap_idle -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/ap_ready -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/ap_start -into $blocksiggroup&#xD;&#xA;## set resetgroup [add_wave_group &quot;Reset&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/ap_rst_n -into $resetgroup&#xD;&#xA;## set clockgroup [add_wave_group &quot;Clock&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_nn_top/AESL_inst_nn/ap_clk -into $clockgroup&#xD;&#xA;## set testbenchgroup [add_wave_group &quot;Test Bench Signals&quot;]&#xD;&#xA;## set tbinternalsiggroup [add_wave_group &quot;Internal Signals&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_simstatus_group [add_wave_group &quot;Simulation Status&quot; -into $tbinternalsiggroup]&#xD;&#xA;## set tb_portdepth_group [add_wave_group &quot;Port Depth&quot; -into $tbinternalsiggroup]&#xD;&#xA;## add_wave /apatb_nn_top/AUTOTB_TRANSACTION_NUM -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/ready_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/done_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/LENGTH_a_V -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/LENGTH_z_V -into $tb_portdepth_group -radix hex&#xD;&#xA;## set tbcoutputgroup [add_wave_group &quot;C Outputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_z_group [add_wave_group z(axis) -into $tbcoutputgroup]&#xD;&#xA;## add_wave /apatb_nn_top/z_V_TREADY -into $tb_z_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/z_V_TVALID -into $tb_z_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/z_V_TDATA -into $tb_z_group -radix hex&#xD;&#xA;## set tb_return_group [add_wave_group return(axi_slave) -into $tbcoutputgroup]&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_INTERRUPT -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_BRESP -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_BREADY -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_BVALID -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_RRESP -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_RDATA -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_RREADY -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_RVALID -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_ARREADY -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_ARVALID -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_ARADDR -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_WSTRB -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_WDATA -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_WREADY -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_WVALID -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_AWREADY -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_AWVALID -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/AXILiteS_AWADDR -into $tb_return_group -radix hex&#xD;&#xA;## set tbcinputgroup [add_wave_group &quot;C Inputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_a_group [add_wave_group a(axis) -into $tbcinputgroup]&#xD;&#xA;## add_wave /apatb_nn_top/a_V_TREADY -into $tb_a_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/a_V_TVALID -into $tb_a_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_nn_top/a_V_TDATA -into $tb_a_group -radix hex&#xD;&#xA;## save_wave_config nn.wcfg&#xD;&#xA;## run all&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// Inter-Transaction Progress: Completed Transaction / Total Transaction&#xD;&#xA;// Intra-Transaction Progress: Measured Latency / Latency Estimation * 100%&#xD;&#xA;//&#xD;&#xA;// RTL Simulation : &quot;Inter-Transaction Progress&quot; [&quot;Intra-Transaction Progress&quot;] @ &quot;Simulation Time&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// RTL Simulation : 0 / 10 [0.00%] @ &quot;125000&quot;&#xD;&#xA;// RTL Simulation : 1 / 10 [0.00%] @ &quot;468125000&quot;&#xD;&#xA;// RTL Simulation : 2 / 10 [0.00%] @ &quot;936115000&quot;&#xD;&#xA;// RTL Simulation : 3 / 10 [0.00%] @ &quot;1404105000&quot;&#xD;&#xA;// RTL Simulation : 4 / 10 [0.00%] @ &quot;1872095000&quot;&#xD;&#xA;// RTL Simulation : 5 / 10 [0.00%] @ &quot;2340085000&quot;&#xD;&#xA;// RTL Simulation : 6 / 10 [0.00%] @ &quot;2808075000&quot;&#xD;&#xA;// RTL Simulation : 7 / 10 [0.00%] @ &quot;3276065000&quot;&#xD;&#xA;// RTL Simulation : 8 / 10 [0.00%] @ &quot;3744055000&quot;&#xD;&#xA;// RTL Simulation : 9 / 10 [0.00%] @ &quot;4212045000&quot;&#xD;&#xA;// RTL Simulation : 10 / 10 [100.00%] @ &quot;4680035000&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;$finish called at time : 4680075 ns : File &quot;C:/Vivado_Project/Pynq-Examples/mnist/hls/test_mnist1/solution1/sim/verilog/nn.autotb.v&quot; Line 352&#xD;&#xA;run: Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 966.008 ; gain = 0.000&#xD;&#xA;## quit" projectName="test_mnist1" solutionName="solution1" date="2020-10-23T13:07:45.808+0900" type="Warning"/>
      </simLog>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
